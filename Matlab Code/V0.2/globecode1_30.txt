clc
clear all
close all

Im = imread('globe.png');
Im_size(:)=size(Im);%Gather size data of image
X=Im_size(1);%Save the x dimension
Y=Im_size(2);%Save the Y dimension

histogram(Im)

%Add or remove thresholds in the line below according to the histogram
thresh = [0,117,200]

%Convert the image based on the thresholds
Im_Shaded = imquantize(Im,thresh);

%fileID = fopen('Untitled.txt','wt');
%fprintf(fileID,'%f',Im_Shaded);
%fclose(fileID);

imshow(Im);
histogram(Im)
histogram(Im_Shaded)
imshow(Im_Shaded,[]);

%Now isolating each shade as a seperate b and w image
max_value=max(Im_Shaded(:))

for i = 1:(max_value-1)
    Im_array(:,:,i)=im2bw(Im,thresh(i)/255);
    
end

for i = 1:(max_value-2)
    Im_array_seperate(:,:,i)=Im_array(:,:,i)-bwmorph(Im_array(:,:,i+1),'dilate');
    Im_array_seperate(:,:,i)=imclearborder(Im_array(:,:,i));
    Im_array_seperate(:,:,i)=(Im_array(:,:,i)-bwmorph(Im_array(:,:,i+1),'dilate'));
    Im_array_seperate(:,:,i+1)=(~Im_array(:,:,i+1));
end

Im_array_seperate(:,:,2) = imclearborder(Im_array_seperate(:,:,2));
imshow(Im_array_seperate(:,:,1));
num_objects_1 = max(max(bwlabel(Im_array_seperate(:,:,1))))
imshow(Im_array_seperate(:,:,2));
num_objects_2 = max(max(bwlabel(Im_array_seperate(:,:,2))))
imshow(Im_array_seperate(:,:,3));
num_objects_3 = max(max(bwlabel(Im_array_seperate(:,:,3))))


%Converts the different shades into outlines
Im_array_outline(:,:,1) = (bwmorph(bwmorph(Im_array_seperate(:,:,1),'remove'),'diag')-(bwmorph(bwmorph(Im_array_seperate(:,:,3),'remove'),'diag')));
%imshow(Im_array_seperate(:,:,2));
Im_array_outline(:,:,2) = (bwmorph(bwmorph(Im_array_seperate(:,:,2),'remove'),'clean')-(bwmorph(bwmorph(Im_array_seperate(:,:,3),'remove'),'diag')));
Im_array_outline(:,:,3) = bwmorph(bwmorph(Im_array_seperate(:,:,3),'remove'),'diag');
imshow(Im_array_outline(:,:,1));
num_objects_1 = max(max(bwlabel(Im_array_outline(:,:,1))))
imshow(Im_array_outline(:,:,2));
num_objects_2 = max(max(bwlabel(Im_array_outline(:,:,2))))
imshow(Im_array_outline(:,:,3));
num_objects_3 = max(max(bwlabel(Im_array_outline(:,:,3))))


%Convert the image into an ordered image based on shade and proximity to the origin 0,0
% X , Y is the pixel step# and X+1 , Y is the pixel shade
Im_Final = zeros(X*2,Y);
step = 1;
return_x = 0;
return_y = 0;

for i = 1:X
    for j = Y:1
        if Im_array_outline(i,j,1) == 1
        end
    end
end
%bwlabel(Im_array_sepe